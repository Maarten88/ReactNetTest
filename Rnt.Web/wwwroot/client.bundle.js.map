{"version":3,"sources":["webpack:///webpack/bootstrap 040fb16d0589c6d1d556","webpack:///./Scripts/client.tsx","webpack:///external \"React\"","webpack:///external \"ReactDOM\"","webpack:///./Scripts/Components/Hello.tsx"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACtCA,OAAiB,4BAAc;AAC/B,OAAoB,+BAAkB;AAEtC,qCAA2C;AAEnC,UAAO,OACX,oBAAC,QAAK,SAAS,UAAa,cAAU,WAAW,YACzC,SAAe,eACzB,Y;;;;;;ACRF,wB;;;;;;ACAA,2B;;;;;;;;;ACEA,OAAiB,4BAAc;AAI/B,qBAAgC,MAAU;AAChC;AACI,gBAAC,oBAAG,2BAAiB,KAAM,MAAU,mBAAU,KAAM,MAAW,WAC1E;AACH;;AAJY,SAAK,QAIjB,M","file":"./wwwroot/client.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 040fb16d0589c6d1d556\n **/","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport { Hello } from \"./Components/Hello\";\r\n\r\nReactDOM.render(\r\n    <Hello compiler=\"TypeScript\" framework=\"React\" />,\r\n    document.getElementById(\"example\")\r\n);\n\n\n/** WEBPACK FOOTER **\n ** ./Scripts/client.tsx\n **/","module.exports = React;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"React\"\n ** module id = 1\n ** module chunks = 0 1\n **/","module.exports = ReactDOM;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"ReactDOM\"\n ** module id = 2\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/index.d.ts\" />\r\n \r\nimport * as React from \"react\";\r\n\r\nexport interface HelloProps { compiler: string; framework: string; }\r\n\r\nexport class Hello extends React.Component<HelloProps, {}> {\r\n    render() {\r\n        return <h1>Hello from {this.props.compiler} and {this.props.framework}!</h1>;\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./Scripts/Components/Hello.tsx\n **/"],"sourceRoot":""}