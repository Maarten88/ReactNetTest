{"version":3,"sources":["webpack:///webpack/bootstrap fb0951dd1dbf97670c7e","webpack:///./Scripts/expose.js","webpack:///./Scripts/Components/index.ts?bc22","webpack:///./Scripts/Components/index.ts","webpack:///./Scripts/Components/Hello.tsx","webpack:///external \"React\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA,yC;;;;;;ACJA,8G;;;;;;;;;;;;;ACKA,mCAAgC;AAAvB,yBAAuB,M;;;;;;;;;ACHhC,OAAiB,4BAAc;AAO/B,qBAAgC,MAAU;AACtC,iBAA6B;AACzB,eAAa;AAGjB,cAAU,aAAG;AACT,iBAAO,MAAG,IAAqB;AAC5B,iBAAK,KAAM,OAAY,YAAQ;AAC/B,iBAAO,SAAG;AACT,qBAAQ,OAAO,KAAM,MAAI,IAAe;AACpC,sBAAS,SAAC,EAAM,MACxB;AAAE;AACC,iBACP;AAAE;AAVM,cAAM,QAAG,EAAM,MAAM,KAAM,MACnC;AAAC;AAWK;AACF,aAC8B;;AAC3B,aAAO,OAAQ,WAAiB,aAAE;AAC9B,iBAAC,CAAO,OAAM,MAAE;AACT,wBAAK,OAAG,IAClB;AAAC;AAED,iBAAQ,OAAG,IAAY;AACnB,kBAAC,IAAK,IAAI,GAAG,IAAS,QAAK,KACvB,KAAK,KAAI;AACX,oBAAK,KAAK,KAAO;AACV,6BAAS,OAAK,KAC/B;AAAM,gBAAE;AACS,6BACjB;AAAC;AAEK,gBAAC,oBAAI,aACP,oBAAG,2BAAiB,KAAM,MAAU,mBAAU,KAAM,MAAW,WAAM,MACjE,oBAAG,MAAE,OACL,oBAAE,WAAM,KAAU,UAAK,KAAM,MAAY,QACzC,oBAAO,YAAQ,SAAM,KAAY,cAA2B,sBAC5D,oBAAE,uBAAwB,eAEtC;AACH;;AAxCY,SAAK,QAwCjB,M;;;;;;;ACjDD,wB","file":"./wwwroot/components.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap fb0951dd1dbf97670c7e\n **/","// Content/server.js\n\n// All JavaScript in here will be loaded server-side\n// Expose components globally so ReactJS.NET can use them\nvar Components = require('expose?Components!./Components');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Scripts/expose.js\n ** module id = 0\n ** module chunks = 0\n **/","module.exports = global[\"Components\"] = require(\"-!D:\\\\P\\\\ReactNetTest\\\\Rnt.Web\\\\node_modules\\\\babel-loader\\\\index.js!D:\\\\P\\\\ReactNetTest\\\\Rnt.Web\\\\node_modules\\\\ts-loader\\\\index.js!D:\\\\P\\\\ReactNetTest\\\\Rnt.Web\\\\Scripts\\\\Components\\\\index.ts\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/expose-loader?Components!./Scripts/Components/index.ts\n ** module id = 1\n ** module chunks = 0\n **/","//module.exports = {\n//    // All the components you'd like to render server-side\n//    Hello: require('./Hello')\n//};\n\nexport { Hello } from \"./Hello\";\n\n\n/** WEBPACK FOOTER **\n ** ./Scripts/Components/index.ts\n **/","/// <reference path=\"../../typings/index.d.ts\" />\r\n \r\nimport * as React from \"react\";\r\n\r\nexport interface HelloProps { initialData?: any; compiler: string; framework: string }\r\nexport interface HelloState { data: any }\r\n\r\ndeclare var global : any;\r\n\r\nexport class Hello extends React.Component<HelloProps, HelloState> {\r\n    constructor(props: HelloProps) {\r\n        super(props);\r\n        this.state = { data: this.props.initialData };\r\n    }\r\n    getFromApi = () => {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('get', '/apicall', true);\r\n        xhr.onload = () => {\r\n            var data = JSON.parse(xhr.responseText);\r\n            this.setState({ data: data });\r\n        };\r\n        xhr.send();\r\n    };\r\n\r\n    render() {\r\n        var objectsLeaked: number;\r\n        // Make memory leak serverside\r\n        if (typeof(window) === 'undefined') {\r\n            if (!global.leak) {\r\n                global.leak = new Array();\r\n            }\r\n\r\n            var fill = new Array();\r\n            for (var j = 0; j < 100000; j++)\r\n                fill.push(j);\r\n            global.leak.push(fill);\r\n            objectsLeaked = global.leak.length;\r\n        } else {\r\n            objectsLeaked = 0;\r\n        }\r\n\r\n        return <div>\r\n            <h1>Hello from {this.props.compiler} and {this.props.framework}!</h1>\r\n                <br/>\r\n                <p>{JSON.stringify(this.state.data) }</p>\r\n                <button onClick={this.getFromApi}>Get Data From API</button>\r\n                <p>(leaked {objectsLeaked} objects)</p>\r\n            </div>;\r\n    } \r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./Scripts/Components/Hello.tsx\n **/","module.exports = React;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"React\"\n ** module id = 4\n ** module chunks = 0\n **/"],"sourceRoot":""}